services:
  # PHP-FPM Service для Laravel
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: web-rookie-app
    container_name: web-rookie-app
    restart: unless-stopped
    tty: true
    working_dir: /var/www
    volumes:
      - ./driveit:/var/www
      - ./php/php.ini:/usr/local/etc/php/conf.d/php.ini
    networks:
      - backend
    depends_on:
      - db
      - redis

  # Nginx Service
  webserver:
    image: nginx:alpine
    container_name: web-rookie-webserver
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./driveit:/var/www
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - ./letsencrypt:/var/www/letsencrypt
      - ./letsencrypt:/etc/letsencrypt
      - ./nginx/logs/:/var/log/nginx
    networks:
      - backend
      - frontend
    depends_on:
      - app

  # MySQL Service
  db:
    image: mysql:8.0
    container_name: web-rookie-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
    volumes:
      - dbdata:/var/lib/mysql
      - ./mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - backend

  # Redis Service
  redis:
    image: redis:alpine
    container_name: web-rookie-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data
    networks:
      - backend

  # Node.js Service для фронтенда
  node:
    image: node:16
    container_name: web-rookie-node
    working_dir: /var/www
    volumes:
      - ./driveit/:/var/www
    networks:
      - backend
    command: sh -c "npm install && npm run prod"
    depends_on:
      - app

  # Certbot для Let's Encrypt
  certbot:
    image: certbot/certbot
    container_name: web-rookie-certbot
    volumes:
      - ./letsencrypt:/etc/letsencrypt
      - ./nginx/ssl:/var/www/letsencrypt
    depends_on:
      - webserver
    networks:
      - backend
    command: certonly --webroot --webroot-path=/var/www/letsencrypt --email ${LETSENCRYPT_EMAIL} --agree-tos --no-eff-email -d ${DOMAIN} -d www.${DOMAIN}

# Docker Networks
networks:
  backend:
    driver: bridge
  frontend:
    driver: bridge

# Docker Volumes
volumes:
  dbdata:
    driver: local
  redisdata:
    driver: local

