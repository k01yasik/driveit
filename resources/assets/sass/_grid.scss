// Grid Variables
$columns: 12;
$gutter: 2%;
$breakpoints: (
  'small': 0,
  'medium': 601px,
  'large': 993px
);

// Container Styles
.container {
  max-width: 1200px;
  width: 90%;
  margin: 0 auto;
  position: relative;

  @media (min-width: map-get($breakpoints, 'medium')) {
    width: 85%;
  }

  @media (min-width: map-get($breakpoints, 'large')) {
    width: 80%;
  }
}

// Row Styles
.row {
  width: 100%;
  margin-bottom: 2em;
  @include clearfix;

  &:last-child {
    margin-bottom: 0;
  }
}

// Column Mixins
@mixin column-base {
  float: left;
  min-height: 1px;
  box-sizing: border-box;
}

@mixin column-width($i, $columns, $gutter) {
  $column-width: (100% - ($gutter * ($columns - 1))) / $columns;
  width: ($column-width * $i) + ($gutter * ($i - 1));
  @if $i < $columns { margin-right: $gutter; }
}

@mixin column-offset($i, $columns, $gutter) {
  $column-width: (100% - ($gutter * ($columns - 1))) / $columns;
  margin-left: ($column-width + $gutter) * $i;
}

// Grid Generator
@mixin grid-generator($size, $columns, $gutter) {
  @for $i from 1 through $columns {
    .col.#{$size}#{$i} {
      @include column-width($i, $columns, $gutter);
    }
    
    .offset-#{$size}#{$i} {
      @include column-offset($i, $columns, $gutter);
    }
  }
  
  .col.#{$size}#{$columns} {
    margin-right: 0;
  }
}

// Clearfix Mixin
@mixin clearfix {
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}

// Base Column Styles
.col {
  @include column-base;
  
  &:last-child {
    margin-right: 0;
  }
}

// Generate Grids
@include grid-generator('s', $columns, $gutter);

@media (min-width: map-get($breakpoints, 'medium')) {
  @include grid-generator('m', $columns, $gutter);
}

@media (min-width: map-get($breakpoints, 'large')) {
  @include grid-generator('l', $columns, $gutter);
}
